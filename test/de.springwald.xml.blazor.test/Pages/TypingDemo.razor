@page "/TypingDemo"
@using de.springwald.xml.blazor.Components
@using de.springwald.xml.blazor
@using de.springwald.xml.blazor.test.DemoData
@using System.Timers

<h1>typing demo</h1>

<h2>@fps FPS</h2>

<de.springwald.xml.blazor.Components.XmlEditor @ref="xmlEditor" EditorContext="this.editorContext" />

@code {

    private const string LoremIpsum = "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.";

    private DateTime startTime = DateTime.Now;
    private int frames;
    private string fps;
    private XmlEditor xmlEditor;

    XmlEditorContext editorContext = new XmlEditorContext();
    private Timer typingTimer;
    private string documentContent = "<category><pattern id=\"test\" id2=\"test2\">Lorem ipsum dolor sit amet, consetetur sadipscing elitr</pattern><template>Lorem ipsum Dolor sit amet</template><template id=\"test2\" id2=\"LOREM ipsum Dolor Sit Amet lorem ipsum Dolor sit amet\">lorem ipsum dolor sit amet lorem ipsum dolor sit amet</template><template id=\"1\"></template></category>";
    private int actualDocumentIndex = 0;
    private System.Xml.XmlDocument xmlDocument;

    protected override async Task OnInitializedAsync()
    {
        var demoDtd = DemoDtd.LoadDemoDtd();
        this.editorContext.XmlRules = new DemoXmlRegelwerk(demoDtd);

        this.typingTimer = new Timer();
        this.typingTimer.Elapsed += LoadDocumentTimedEvent;
        this.typingTimer.Interval = 1;
        this.typingTimer.Start();
        await base.OnInitializedAsync();
    }

    private int typingPos = 0;

    private async void LoadDocumentTimedEvent(Object source, System.Timers.ElapsedEventArgs e)
    {
        this.typingTimer.Stop();

        if (this.xmlDocument == null)
        {
            this.xmlDocument = new System.Xml.XmlDocument();
            xmlDocument.LoadXml(this.documentContent);
            await this.editorContext.SetRootNode(xmlDocument.DocumentElement);
        }

        var patternNode = xmlDocument.DocumentElement.ChildNodes[0];
        var templateNode = xmlDocument.DocumentElement.ChildNodes[1];
        var textNode = patternNode.ChildNodes[0];

        this.typingPos++;
        if (this.typingPos >= LoremIpsum.Length) this.typingPos = 0;

        await this.xmlEditor.Editor.CursorRoh.BeideCursorPosSetzenMitChangeEventWennGeaendert(
                textNode,
                cursor.XMLCursorPositionen.CursorInnerhalbDesTextNodes,
                textNode.InnerText.Length);
        await this.xmlEditor.Editor.AktionTextAnCursorPosEinfuegen(LoremIpsum[this.typingPos].ToString(), editor.XMLEditor.UndoSnapshotSetzenOptionen.ja);

        this.Count();
        this.typingTimer.Start();
    }

    private int showCounter = 0;

    protected void Count()
    {
        this.frames++;
        if (this.showCounter != DateTime.Now.Second)
        {
            this.showCounter = DateTime.Now.Second;
            this.fps = $"{(this.frames / (DateTime.Now - this.startTime).TotalSeconds):0.00}";
            this.StateHasChanged();
        }

        this.actualDocumentIndex++;
    }
}
